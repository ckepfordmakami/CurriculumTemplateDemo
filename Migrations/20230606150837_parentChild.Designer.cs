// <auto-generated />
using System;
using CurriculumTemplateDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurriculumTemplateDemo.Migrations
{
    [DbContext(typeof(CurriculumTemplateDemoContext))]
    [Migration("20230606150837_parentChild")]
    partial class parentChild
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CurriculumTemplateDemo.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Student")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("staff")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.Curriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.CurriculumEventTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurriculumEventTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CurriculumSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumEventTypeId");

                    b.HasIndex("CurriculumSectionId");

                    b.ToTable("CurriculumEventTemplates");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.CurriculumEventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CurriculumEventTypes");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.CurriculumSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("required")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumId");

                    b.ToTable("CurriculumsModules");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.StudentEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<string>("Cohort")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CurriculumEventTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StudentFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudentLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("CurriculumEventTemplateId");

                    b.ToTable("StudentEvents");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.CurriculumEventTemplate", b =>
                {
                    b.HasOne("CurriculumTemplateDemo.Models.CurriculumEventType", "CurriculumEventType")
                        .WithMany()
                        .HasForeignKey("CurriculumEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CurriculumTemplateDemo.Models.CurriculumSection", "CurriculumSection")
                        .WithMany("CurriculumEventTemplates")
                        .HasForeignKey("CurriculumSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurriculumEventType");

                    b.Navigation("CurriculumSection");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.CurriculumSection", b =>
                {
                    b.HasOne("CurriculumTemplateDemo.Models.Curriculum", "Curriculum")
                        .WithMany("Sections")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.StudentEvent", b =>
                {
                    b.HasOne("CurriculumTemplateDemo.Models.Attendance", "Attendance")
                        .WithMany()
                        .HasForeignKey("AttendanceId");

                    b.HasOne("CurriculumTemplateDemo.Models.CurriculumEventTemplate", "CurriculumEventTemplate")
                        .WithMany("StudentEvents")
                        .HasForeignKey("CurriculumEventTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");

                    b.Navigation("CurriculumEventTemplate");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.Curriculum", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.CurriculumEventTemplate", b =>
                {
                    b.Navigation("StudentEvents");
                });

            modelBuilder.Entity("CurriculumTemplateDemo.Models.CurriculumSection", b =>
                {
                    b.Navigation("CurriculumEventTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
